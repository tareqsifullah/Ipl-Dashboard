{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","useEffect","a","fetch","process","response","json","data","console","log","fetchTeams","class","title","value","totalMatches","totalWins","color","slice","map","id","YearSelector","years","i","push","year","MatchPage","setMatches","fetchMatches","TeamTile","HomePage","teams","setTeams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6f58fbf.chunk.js","sourcesContent":["import {React} from 'react';\nimport {Link} from 'react-router-dom'\nimport \"./MatchDetailCard.scss\";\nexport const MatchDetailCard = ({teamName,match}) => {\n\n  const otherTeam = match.team1 === teamName ?  match.team2 : match.team1;\n  const otherTeamRoute = `/teams/${otherTeam}`\n  const isMatchWon = teamName === match.matchWinner;\n\n\n  if(!match) return null;\n  return (\n    <div className={isMatchWon ? 'MatchDetailCard won-card' : 'MatchDetailCard lost-card'}>\n    <div>\n\n      <span className=\"vs\">vs</span>\n      <h1><Link to = {otherTeamRoute}> {otherTeam}</Link></h1>\n      <h2 className =\"match-date\">{match.date}</h2>\n      <h3 className =\"match-venue\">{match.venue}</h3>\n      <h3 className =\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</h3>\n      </div>\n      <div className = \"additional-detail\">\n      <h3>First Innings</h3>\n      <p>{match.team1}</p>\n      <h3>Second Innings</h3>\n      <p>{match.team2}</p>\n      <h3>Man of the match</h3>\n      <p> {match.playerOfMatch}</p>\n      <h3>Umpires</h3>\n      <p> {match.umpire1} , {match.umpire2}</p>\n      </div>\n    </div>\n  );\n}\n","import {React} from 'react';\nimport {Link} from 'react-router-dom';\nimport './MatchSmallCard.scss';\nexport const MatchSmallCard = ({teamName,match}) => {\n\n  const otherTeam = match.team1 === teamName ?  match.team2 : match.team1;\n  const otherTeamRoute = `/teams/${otherTeam}`;\n  const isMatchWon = teamName === match.matchWinner;\n  if(!match) return null;\n\n  return (\n    <div className={isMatchWon ? 'MatchSmallCard won-card' : 'MatchSmallCard lost-card'}>\n      <span className=\"vs\">vs</span>\n     <h3> <Link to ={otherTeamRoute}>{otherTeam}</Link></h3>\n    <p className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</p>\n\n    </div>\n  );\n}\n","import {React,useEffect,useState} from 'react';\nimport {useParams,Link} from 'react-router-dom';\nimport{MatchDetailCard} from '../components/MatchDetailCard';\nimport{MatchSmallCard} from '../components/MatchSmallCard';\nimport { PieChart } from 'react-minimal-pie-chart';\nimport './TeamPage.scss';\nexport const TeamPage = () => {\n//initialization matches:[] helped reduce the error of team.matches is undefined\n    const [team,setTeam] = useState({matches:[]});\n   //Using destructuring to get the teamName\n    const {teamName} = useParams();\n\n    useEffect(\n        () => {\n            const fetchTeams = async() =>{\n                const response = await fetch( `${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}`);\n                const data = await response.json();\n                console.log(data);\n                setTeam(data);\n            };\n            fetchTeams();\n        },[teamName]\n    );\n\n  if(!team || !team.teamName){\n    return <h1>Team Not Found</h1>\n  }\n\n  return (\n    <div className=\"TeamPage\">\n     <div class = \"team-name-section\">\n     <h1 className = \"team-name\">{team.teamName}</h1>\n     </div>\n     <div className = \"win-loss-section\">\n     Wins/Loses\n     <PieChart\n       data={[\n         { title: 'Losses', value: team.totalMatches-team.totalWins, color: '#e15454' },\n         { title: 'Wins', value: team.totalWins, color: '#4da375' },\n\n\n       ]}\n     />\n     </div>\n     <div className = \"match-detail-section\">\n              <h3>Latest Matches</h3>\n              <MatchDetailCard teamName = {team.teamName} match = {team.matches[0]}/></div>\n                {team.matches.slice(1).map(match => <MatchSmallCard key = {match.id} teamName = {team.teamName} match = {match}/>)}\n     <div className = \"more-link\">\n           <Link to={`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>More ></Link>\n</div>\n    </div>\n  );\n}\n","import {React} from 'react';\nimport {Link} from 'react-router-dom';\nimport './YearSelector.scss';\nexport const YearSelector=({teamName})=>{\n    let years = [];\n    const startYear = process.env.REACT_APP_DATA_START_YEAR;\n    const endYear = process.env.REACT_APP_DATA_END_YEAR;\n\n    for (let i = startYear;i<= endYear;i++){\n    years.push(i);\n    }\n\n    return (\n    <ol className=\"YearSelector\">\n    {years.map(year =>\n    <li key = {year}>\n      <Link  to={`/teams/${teamName}/matches/${year}`}>{year}</Link>\n    </li>\n\n    )}\n    </ol>\n    )\n}","import {React,useEffect,useState} from 'react';\nimport {useParams} from 'react-router-dom';\nimport{MatchDetailCard} from '../components/MatchDetailCard';\nimport{YearSelector} from '../components/YearSelector';\nimport './MatchPage.scss';\nexport const MatchPage = () => {\n\n    const [matches ,setMatches] = useState([]);\n    const {teamName,year} = useParams();\n    useEffect(\n            () => {\n                const fetchMatches = async() =>{\n                    const response = await fetch( `${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}/matches?year=${year}` );\n                    const data = await response.json();\n                    console.log(data);\n                    setMatches(data);\n                };\n                fetchMatches();\n            },[teamName,year]\n        );\n\nif(!matches){\n    return <h1>Match Not Found</h1>\n  }\n\n  return (\n    <div className=\"MatchPage\">\n    <div className = \"year-selector\">\n        <h3>Select Year</h3>\n        <YearSelector teamName={teamName}/>\n    </div>\n\n        <div>\n         <h1 className=\"page-heading\">{teamName} matches in  {year}</h1>\n        {\n          matches.map(match => <MatchDetailCard key = {match.id}teamName={teamName} match = {match}/>)\n\n        }\n        </div>\n\n    </div>\n  );\n}","import {React } from 'react';\nimport {Link} from 'react-router-dom';\nimport './TeamTile.scss'\nexport const TeamTile = ({teamName}) => {\n\n\n\n    return(\n        <div className=\"TeamTile\">\n            <h2>\n                <Link to = {`/teams/${teamName}`}>\n                    {teamName}\n                </Link>\n            </h2>\n        </div>\n\n    )\n}\n","import {React,useEffect,useState} from 'react';\nimport{TeamTile} from '../components/TeamTile';\nimport './HomePage.scss';\nexport const HomePage = () => {\n//initialization matches:[] helped reduce the error of team.matches is undefined\n    const [teams,setTeams] = useState([]);\n\n\n    useEffect(\n        () => {\n            const fetchAllTeams = async() =>{\n                const response = await fetch( `${process.env.REACT_APP_API_ROOT_URL}/team`);\n                const data = await response.json();\n                console.log(data);\n                setTeams(data);\n            };\n            fetchAllTeams();\n        },[]\n    );\n\n  return (\n    <div className=\"HomePage\">\n     <div class = \"header-section\">\n     <h1 className = \"app-name\">IPL Dashboard</h1>\n  </div>\n  <div className=\"team-grid\">\n    {teams.map(team => <TeamTile key={team.id} teamName = {team.teamName}/>)}\n  </div>\n    </div>\n  );\n}\n","import './App.scss';\nimport {HashRouter as Router,Route,Switch} from 'react-router-dom'\nimport {TeamPage} from './pages/TeamPage';\nimport {MatchPage} from './pages/MatchPage';\nimport {HomePage} from './pages/HomePage';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Router>\n      <Switch>\n        <Route path=\"/teams/:teamName/matches/:year\">\n              <MatchPage/>\n        </Route>\n        <Route path=\"/teams/:teamName\">\n             <TeamPage/>\n        </Route>\n        <Route path=\"/\">\n              <HomePage/>\n        </Route>\n\n      </Switch>\n    </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}